CC = gcc
CFLAGS = -Wall -Wextra
OPENSSL_FLAGS = 

# Detect operating system
UNAME_S := $(shell uname -s)

# macOS specific settings (Homebrew or MacPorts)
ifeq ($(UNAME_S),Darwin)
    # Check if using Homebrew
    BREW_OPENSSL := $(shell brew --prefix openssl 2>/dev/null)
    ifneq ($(BREW_OPENSSL),)
        OPENSSL_FLAGS += -I$(BREW_OPENSSL)/include -L$(BREW_OPENSSL)/lib
    else
        # Check if using MacPorts
        PORT_OPENSSL := $(shell port dir openssl 2>/dev/null)
        ifneq ($(PORT_OPENSSL),)
            OPENSSL_FLAGS += -I/opt/local/include -L/opt/local/lib
        endif
    endif
endif

# Full flags including OpenSSL flags
ALL_CFLAGS = $(CFLAGS) $(OPENSSL_FLAGS)
LDFLAGS = -lssl -lcrypto

all: rsa_verify

rsa_verify: main.c
	@echo "Compiling with flags: $(ALL_CFLAGS)"
	$(CC) $(ALL_CFLAGS) -o rsa_verify main.c $(LDFLAGS)

clean:
	rm -f rsa_verify

help:
	@echo "OpenSSL Makefile Help"
	@echo "--------------------"
	@echo "make        - Build the rsa_verify application"
	@echo "make clean  - Remove built files"
	@echo "make help   - Display this help"
	@echo ""
	@echo "Current OpenSSL flags: $(OPENSSL_FLAGS)"
	@echo ""
	@echo "If you still have issues with openssl/bio.h, try:"
	@echo "  - On macOS with Homebrew: brew install openssl"
	@echo "  - On macOS with MacPorts: port install openssl"
	@echo "  - On Linux: apt-get install libssl-dev (Ubuntu/Debian)"
	@echo "              or dnf install openssl-devel (Fedora/RHEL)"
	@echo ""
	@echo "Manual override examples:"
	@echo "  make OPENSSL_FLAGS=\"-I/path/to/openssl/include -L/path/to/openssl/lib\""

.PHONY: all clean help
