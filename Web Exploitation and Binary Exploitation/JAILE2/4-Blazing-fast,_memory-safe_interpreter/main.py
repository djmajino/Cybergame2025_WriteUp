import subprocess

HEADER = """
#![no_std]
#![no_main]
use core::panic::PanicInfo;
#[panic_handler]
fn panic(_info: &PanicInfo) -> ! {
    loop {}
}
#[unsafe(no_mangle)]
pub extern "C" fn _start() -> () {
"""

FOOTER = """
}
"""

def checker(code):
    if code.count("!") > 1:
        return 0
    if "libc" in code:
        return 0
    if "std" in code:
        return 0
    if "flag" in code:
        return 0
    if "syscall" in code:
        return 0
    if "include" in code:
        return 0
    return 1

code = input("Give me code> ")
if not checker(code):
    print("Go away you hacker")
    exit()
with open("./src/main.rs", "w") as f:
    f.write(HEADER)           
    f.write(code)
    f.write(FOOTER)           

print("Building - this may take a while...",end="")
out = subprocess.run(
    ["cargo", "build", "--target", "x86_64-unknown-none"],
    capture_output=True,
    text=True  
)
if out.returncode:
    print("failed - exit")
    exit()
print("done")
print("Running...")
subprocess.run(["cargo", "run", "--target", "x86_64-unknown-none"])
