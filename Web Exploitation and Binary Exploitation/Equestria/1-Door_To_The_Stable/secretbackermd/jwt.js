const crypto = require("crypto");
const { v4 } = require("uuid");

const JWT_SECRET = v4();

function createToken(payload) {
  const base64Payload = Buffer.from(JSON.stringify(payload)).toString("base64");
  const signature = crypto
    .createHmac("sha256", JWT_SECRET)
    .update(base64Payload)
    .digest("base64");

  return `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.${base64Payload}.${signature}`;
}

function verifyToken(token) {
  const parts = token.split(".");
  if (parts.length < 3) return null;

  const payload = parts[1];
  const signature = parts[parts.length - 1];

  const expectedSignature = crypto
    .createHmac("sha256", JWT_SECRET)
    .update(parts[parts.length - 2])
    .digest("base64");

  if (signature === expectedSignature) {
    return JSON.parse(Buffer.from(payload, "base64").toString());
  }
  return null;
}

module.exports = {
  createToken,
  verifyToken,
};
