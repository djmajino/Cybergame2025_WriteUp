import sys

# Funkcia na načítanie symbolov zo súboru
def load_symbols(filename):
    symbols = []
    with open(filename, 'r') as f:
        for line in f:
            parts = line.strip().split()
            if len(parts) < 3:
                continue
            address = int(parts[0], 16)
            symbol = parts[2]
            symbols.append((address, symbol))
    return symbols

# Funkcia na výpočet veľkostí symbolov podľa adresy
def calculate_sizes(symbols):
    sizes = {}
    sorted_symbols = sorted(symbols, key=lambda x: x[0])
    for i in range(len(sorted_symbols) - 1):
        current_address, symbol = sorted_symbols[i]
        next_address, _ = sorted_symbols[i + 1]
        sizes[symbol] = (current_address, next_address - current_address)
    return sizes

# Načítanie symbolov
original_symbols = load_symbols('original_symbols.txt')
custom_symbols = load_symbols('custom_symbols.txt')

# Výpočet veľkostí
original_sizes = calculate_sizes(original_symbols)
custom_sizes = calculate_sizes(custom_symbols)

# Porovnanie veľkostí
diff_sizes = []
for symbol in custom_sizes:
    if symbol in original_sizes:
        size_diff = custom_sizes[symbol][1] - original_sizes[symbol][1]
        if size_diff != 0:
            diff_sizes.append((symbol, size_diff, custom_sizes[symbol][0]))

# Zoradenie podľa veľkosti od najviac pridanej po najviac ubranej bajty
diff_sizes.sort(key=lambda x: x[1], reverse=True)

# Výpis výsledku
print(f"{'Symbol':<40} {'Size Diff (bytes)':>20} {'Custom Address':>20}")
print('-' * 80)
for symbol, size_diff, address in diff_sizes:
    print(f"{symbol:<40} {size_diff:>20} {hex(address):>20}")